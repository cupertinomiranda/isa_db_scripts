//#ifndef _(A)
//#define _(A) A
//#endif

<%
  require 'rubygems'
  load 'init.rb'

  def spaces(str)
    return (1..str.size).map { " " }.join('')
  end

ReplacementMask.all.select { |r| r.name != nil }.each do |repl_mask|
 if repl_mask.name != nil %>
/* mask  = <%= repl_mask.mask %>.  */
#ifndef REPLACE_<%= repl_mask.name %>
#define REPLACE_<%= repl_mask.name %>
ATTRIBUTE_UNUSED static unsigned
replace_<%= repl_mask.name %> (unsigned insn,
        <%= spaces(repl_mask.name) %>  int value ATTRIBUTE_UNUSED)
{
<% repl_mask.replacements do |symbol_used, loc, repl_mask| 
  %>  insn |= ((value >> <%= symbol_used %>) & <%= repl_mask %>) << <%= loc %>;
<% end %>
  return insn;
}
<% end %>
#endif /* REPLACE_<%= repl_mask.name %> */
<% end %>



<%
    #TODO: Fix this ... there is a lot of repeated functions being generated
  BitReplacement.each_with_value_shift do |operand_type, data| 
    name = data[:name]
    mask = data[:mask]
    repl_mask = data[:repl_mask]
    ignore_bits = data[:ignore_bits]
    verify_alignment = data[:verify_alignment]
    use_replace_func = data[:use_replace_func]
    typer = operand_type.signed? ? "int" : "unsigned"
%>
/* mask  = <%= mask %>.  */
#ifndef INSERT_<%= name %>
#define INSERT_<%= name %>
ATTRIBUTE_UNUSED static unsigned
insert_<%= name.downcase %> (unsigned insn ATTRIBUTE_UNUSED,
       <%= spaces(name)  %>  int value ATTRIBUTE_UNUSED,
       <%= spaces(name)  %>  const char **errmsg ATTRIBUTE_UNUSED)
{
<% if(ignore_bits > 0 || verify_alignment != nil) 
     alignement = verify_alignment || ignore_bits
%>  if (value & <%= "0x%02x" % ((2**alignement) - 1) %>)
    *errmsg = "Target address is not <%= 8*(2**ignore_bits)%>bit aligned.";<% end %>
<% if use_replace_func 
%>  insn = replace_<%= use_replace_func %> (insn, value);
<% else %>
<% repl_mask.replacements(ignore_bits) do |symbol_used, loc, repl_mask| 
%>  insn |= ((value >> <%= symbol_used %>) & <%= repl_mask %>) << <%= loc %>;
<% end %>
<% end %>
  return insn;
}
#endif /* INSERT_<%= name %> */

#ifndef EXTRACT_<%= name %>
#define EXTRACT_<%= name %>
ATTRIBUTE_UNUSED static int
extract_<%= name.downcase %> (unsigned insn ATTRIBUTE_UNUSED,
        <%= spaces(name)  %>  int *invalid ATTRIBUTE_UNUSED)
{
  <%= typer %> value = 0;
<% repl_mask.replacements(ignore_bits) do |symbol_used, loc, repl_mask| 
  %>  value |= ((insn >> <%= loc %>) & <%= repl_mask %>) << <%= symbol_used %>;
<% end %>
<% if (operand_type.signed?) 
%>  /* Extend the sign.  */
  int signbit = 1 << (<%= operand_type.size %> - 1);
  value = (value ^ signbit) - signbit; 
<% end %>
  return value;
}
#endif /* EXTRACT_<%= name %> */
<% end %>
